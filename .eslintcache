[{"/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/reportWebVitals.js":"1","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/index.js":"2","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/App.js":"3","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/components/Navbar.js":"4","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/components/CountriesList.js":"5","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/components/CountryDetails.js":"6"},{"size":362,"mtime":1643809050328,"results":"7","hashOfConfig":"8"},{"size":628,"mtime":1643912967329,"results":"9","hashOfConfig":"8"},{"size":826,"mtime":1643981667049,"results":"10","hashOfConfig":"8"},{"size":217,"mtime":1643913584054,"results":"11","hashOfConfig":"8"},{"size":632,"mtime":1643978006882,"results":"12","hashOfConfig":"8"},{"size":431,"mtime":1643981878475,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10qisb5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/reportWebVitals.js",[],["29","30"],"/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/index.js",[],"/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport {Switch, Route} from \"react-router-dom\";\nimport NavBar from './components/Navbar.js';\nimport CountriesList from './components/CountriesList';\nimport CountryDetails from './components/CountryDetails';\nimport React from 'react';\nimport countriesdata from './countries.json';\n\nclass App extends React.Component {\n  state = {\n    countries: \"\"\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      countries: countriesdata\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={CountriesList}/>\n          <Route path='/:countryId' render={(props) => <CountryDetails {...props} data={this.state.countries} />}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/components/Navbar.js",["32"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\n\nconst NavBar = () => {\n\n    return (\n        <div className=\"navBar\">Lab-Wiki-Countries</div>\n    );\n\n}\n\nexport default NavBar;","/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/components/CountriesList.js",[],"/home/hassan/workspace/ironHack/labs/lab-countries/lab-wiki-countries/src/components/CountryDetails.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":2,"column":9,"nodeType":"40","messageId":"41","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":8,"column":53,"nodeType":"45","messageId":"46","endLine":8,"endColumn":55},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]